"use client";

import { useState, useEffect } from "react";
import { Card, CardHeader, CardTitle, CardDescription, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Progress } from "@/components/ui/progress";
import { useAuth } from "@/context/AuthContext";
import { formatEGPSimple } from "@/lib/egyptian-utils";
import { 
  Plus, 
  Clock, 
  CheckCircle, 
  AlertCircle, 
  DollarSign,
  TrendingUp,
  Calendar,
  Shield,
  ArrowRight,
  Bell,
  CreditCard,
  FileText,
  Users,
  BarChart3,
  Activity,
  Zap,
  Loader2
} from "lucide-react";
import Link from "next/link";

// Interface definitions
interface DashboardStats {
  totalRequests: number;
  activeServices: number;
  completedServices: number;
  totalSpent: number;
  pendingInvoices: number;
  overdueInvoices: number;
}

interface ServiceRequest {
  id: string;
  title: string;
  status: string;
  date: string;
  priority: string;
  serviceName?: string;
  servicePrice?: number;
}

interface Invoice {
  id: string;
  amount: number;
  status: string;
  dueDate: string | null;
  createdAt: string;
}

interface Notification {
  id: number;
  message: string;
  time: string;
  type: string;
}

interface DashboardData {
  stats: DashboardStats;
  recentRequests: ServiceRequest[];
  recentInvoices: Invoice[];
  notifications: Notification[];
}

const statusConfig = {
  pending: { label: "قيد الانتظار", color: "bg-yellow-100 text-yellow-800", icon: Clock },
  in_progress: { label: "قيد التنفيذ", color: "bg-blue-100 text-blue-800", icon: AlertCircle },
  completed: { label: "مكتمل", color: "bg-green-100 text-green-800", icon: CheckCircle }
};

const priorityConfig = {
  low: { label: "عادي", color: "bg-gray-100 text-gray-800" },
  medium: { label: "متوسط", color: "bg-blue-100 text-blue-800" },
  high: { label: "عاجل", color: "bg-orange-100 text-orange-800" },
  urgent: { label: "عاجل جداً", color: "bg-red-100 text-red-800" }
};

export default function ClientDashboardPage() {
  const { user } = useAuth();
  const [currentTime, setCurrentTime] = useState(new Date());
  const [dashboardData, setDashboardData] = useState<DashboardData | null>(null);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  // Fetch dashboard data from API
  useEffect(() => {
    const fetchDashboardData = async () => {
      try {
        setLoading(true);
        const response = await fetch('/api/client/dashboard');
        
        if (!response.ok) {
          throw new Error('Failed to fetch dashboard data');
        }
        
        const data = await response.json();
        setDashboardData(data);
        setError(null);
      } catch (err) {
        console.error('Error fetching dashboard data:', err);
        setError('تعذر تحميل بيانات لوحة التحكم');
      } finally {
        setLoading(false);
      }
    };

    if (user) {
      fetchDashboardData();
    }
  }, [user]);

  useEffect(() => {
    const timer = setInterval(() => setCurrentTime(new Date()), 60000);
    return () => clearInterval(timer);
  }, []);

  const getGreeting = () => {
    const hour = currentTime.getHours();
    if (hour < 12) return "صباح الخير";
    if (hour < 17) return "مساء الخير";
    return "مساء الخير";
  };

  const getStatusBadge = (status: string) => {
    const config = statusConfig[status as keyof typeof statusConfig] || {
      label: status,
      color: "bg-gray-100 text-gray-800",
      icon: Clock
    };
    const Icon = config.icon;
    return (
      <Badge className={config.color}>
        <Icon className="h-3 w-3 mr-1" />
        {config.label}
      </Badge>
    );
  };

  const getPriorityBadge = (priority: string) => {
    const config = priorityConfig[priority as keyof typeof priorityConfig] || {
      label: priority,
      color: "bg-gray-100 text-gray-800"
    };
    return <Badge className={config.color}>{config.label}</Badge>;
  };

  const getInvoiceStatusBadge = (status: string) => {
    switch (status) {
      case 'paid':
        return <Badge className="bg-green-100 text-green-800">مدفوع</Badge>;
      case 'pending':
        return <Badge className="bg-yellow-100 text-yellow-800">معلق</Badge>;
      case 'overdue':
        return <Badge className="bg-red-100 text-red-800">متأخر</Badge>;
      default:
        return <Badge variant="outline">{status}</Badge>;
    }
  };

  if (loading) {
    return (
      <div className="flex items-center justify-center min-h-[400px]">
        <div className="text-center">
          <Loader2 className="h-8 w-8 animate-spin mx-auto mb-4 text-blue-600" />
          <p>جاري تحميل بيانات لوحة التحكم...</p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div className="flex items-center justify-center min-h-[400px]">
        <div className="text-center">
          <AlertCircle className="h-12 w-12 text-red-500 mx-auto mb-4" />
          <h3 className="text-lg font-semibold text-gray-900 mb-2">خطأ في تحميل البيانات</h3>
          <p className="text-gray-500 mb-4">{error}</p>
          <Button onClick={() => window.location.reload()}>إعادة المحاولة</Button>
        </div>
      </div>
    );
  }

  if (!dashboardData) {
    return (
      <div className="flex items-center justify-center min-h-[400px]">
        <div className="text-center">
          <Activity className="h-12 w-12 text-gray-400 mx-auto mb-4" />
          <h3 className="text-lg font-semibold text-gray-900 mb-2">لا توجد بيانات</h3>
          <p className="text-gray-500">لا توجد بيانات متاحة حالياً</p>
        </div>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      {/* Header with Greeting */}
      <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
        <div>
          <h1 className="text-3xl font-bold">لوحة التحكم الرئيسية</h1>
          <p className="text-muted-foreground mt-1">
            {getGreeting()}، {user?.name || "عزيزي العميل"} - {currentTime.toLocaleDateString('ar-EG')}
          </p>
        </div>
        <div className="flex gap-2">
          <Button asChild>
            <Link href="/client/requests">
              <Plus className="h-4 w-4 mr-2" />
              طلب خدمة جديدة
            </Link>
          </Button>
        </div>
      </div>

      {/* Quick Stats */}
      <div className="grid grid-cols-2 lg:grid-cols-4 gap-4">
        <Card className="hover:shadow-md transition-shadow">
          <CardContent className="pt-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-muted-foreground">إجمالي الطلبات</p>
                <p className="text-2xl font-bold">{dashboardData.stats.totalRequests}</p>
              </div>
              <FileText className="h-8 w-8 text-blue-500" />
            </div>
          </CardContent>
        </Card>

        <Card className="hover:shadow-md transition-shadow">
          <CardContent className="pt-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-muted-foreground">الخدمات النشطة</p>
                <p className="text-2xl font-bold text-blue-600">{dashboardData.stats.activeServices}</p>
              </div>
              <Activity className="h-8 w-8 text-blue-500" />
            </div>
          </CardContent>
        </Card>

        <Card className="hover:shadow-md transition-shadow">
          <CardContent className="pt-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-muted-foreground">الخدمات المكتملة</p>
                <p className="text-2xl font-bold text-green-600">{dashboardData.stats.completedServices}</p>
              </div>
              <CheckCircle className="h-8 w-8 text-green-500" />
            </div>
          </CardContent>
        </Card>

        <Card className="hover:shadow-md transition-shadow">
          <CardContent className="pt-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-muted-foreground">إجمالي المصروفات</p>
                <p className="text-2xl font-bold text-purple-600">{formatEGPSimple(dashboardData.stats.totalSpent)}</p>
              </div>
              <DollarSign className="h-8 w-8 text-purple-500" />
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Progress Overview */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center">
              <BarChart3 className="h-5 w-5 mr-2" />
              نظرة عامة على الخدمات
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div>
              <div className="flex justify-between text-sm mb-2">
                <span>الخدمات المكتملة</span>
                <span>{dashboardData.stats.completedServices} من {dashboardData.stats.totalRequests}</span>
              </div>
              <Progress 
                value={dashboardData.stats.totalRequests > 0 ? (dashboardData.stats.completedServices / dashboardData.stats.totalRequests) * 100 : 0} 
                className="h-2" 
              />
            </div>
            
            <div>
              <div className="flex justify-between text-sm mb-2">
                <span>الخدمات النشطة</span>
                <span>{dashboardData.stats.activeServices} من {dashboardData.stats.totalRequests}</span>
              </div>
              <Progress 
                value={dashboardData.stats.totalRequests > 0 ? (dashboardData.stats.activeServices / dashboardData.stats.totalRequests) * 100 : 0}
                className="h-2" 
              />
            </div>
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <CardTitle className="flex items-center">
              <CreditCard className="h-5 w-5 mr-2" />
              حالة الفواتير
            </CardTitle>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="grid grid-cols-2 gap-4">
              <div className="text-center p-4 bg-yellow-50 rounded-lg">
                <p className="text-2xl font-bold text-yellow-600">{dashboardData.stats.pendingInvoices}</p>
                <p className="text-sm text-yellow-700">فواتير معلقة</p>
              </div>
              <div className="text-center p-4 bg-red-50 rounded-lg">
                <p className="text-2xl font-bold text-red-600">{dashboardData.stats.overdueInvoices}</p>
                <p className="text-sm text-red-700">فواتير متأخرة</p>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Recent Activity */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        {/* Recent Service Requests */}
        <Card>
          <CardHeader>
            <div className="flex justify-between items-center">
              <CardTitle className="flex items-center">
                <Clock className="h-5 w-5 mr-2" />
                آخر طلبات الخدمة
              </CardTitle>
              <Button variant="ghost" size="sm" asChild>
                <Link href="/client/requests">
                  عرض الكل
                  <ArrowRight className="h-4 w-4 mr-1" />
                </Link>
              </Button>
            </div>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              {dashboardData.recentRequests.length > 0 ? (
                dashboardData.recentRequests.map((request) => (
                  <div key={request.id} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                    <div className="flex-1">
                      <h4 className="font-medium text-sm">{request.title}</h4>
                      <div className="flex items-center gap-2 mt-1">
                        {getStatusBadge(request.status)}
                        {getPriorityBadge(request.priority)}
                      </div>
                      <p className="text-xs text-muted-foreground mt-1">
                        {new Date(request.date).toLocaleDateString('ar-EG')}
                      </p>
                    </div>
                  </div>
                ))
              ) : (
                <div className="text-center py-8 text-muted-foreground">
                  <FileText className="h-12 w-12 mx-auto mb-2 opacity-50" />
                  <p>لا توجد طلبات خدمة حتى الآن</p>
                </div>
              )}
            </div>
          </CardContent>
        </Card>

        {/* Recent Invoices */}
        <Card>
          <CardHeader>
            <div className="flex justify-between items-center">
              <CardTitle className="flex items-center">
                <CreditCard className="h-5 w-5 mr-2" />
                آخر الفواتير
              </CardTitle>
              <Button variant="ghost" size="sm" asChild>
                <Link href="/client/invoices">
                  عرض الكل
                  <ArrowRight className="h-4 w-4 mr-1" />
                </Link>
              </Button>
            </div>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              {dashboardData.recentInvoices.length > 0 ? (
                dashboardData.recentInvoices.map((invoice) => (
                  <div key={invoice.id} className="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                    <div className="flex-1">
                      <div className="flex justify-between items-start">
                        <div>
                          <h4 className="font-medium text-sm">{invoice.id}</h4>
                          <p className="text-lg font-bold text-blue-600">{formatEGPSimple(invoice.amount)}</p>
                        </div>
                        {getInvoiceStatusBadge(invoice.status)}
                      </div>
                      <p className="text-xs text-muted-foreground mt-1">
                        {invoice.dueDate ? `الاستحقاق: ${new Date(invoice.dueDate).toLocaleDateString('ar-EG')}` : 'تاريخ الإنشاء: ' + new Date(invoice.createdAt).toLocaleDateString('ar-EG')}
                      </p>
                    </div>
                  </div>
                ))
              ) : (
                <div className="text-center py-8 text-muted-foreground">
                  <CreditCard className="h-12 w-12 mx-auto mb-2 opacity-50" />
                  <p>لا توجد فواتير حتى الآن</p>
                </div>
              )}
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Notifications */}
      {dashboardData.notifications.length > 0 && (
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center">
              <Bell className="h-5 w-5 mr-2" />
              الإشعارات الحديثة
            </CardTitle>
          </CardHeader>
          <CardContent>
            <div className="space-y-3">
              {dashboardData.notifications.map((notification) => (
                <div key={notification.id} className={`p-3 rounded-lg border-r-4 ${
                  notification.type === 'success' ? 'bg-green-50 border-green-500' :
                  notification.type === 'warning' ? 'bg-yellow-50 border-yellow-500' :
                  notification.type === 'info' ? 'bg-blue-50 border-blue-500' :
                  'bg-gray-50 border-gray-500'
                }`}>
                  <div className="flex justify-between items-start">
                    <p className="text-sm font-medium">{notification.message}</p>
                    <span className="text-xs text-muted-foreground">{notification.time}</span>
                  </div>
                </div>
              ))}
            </div>
          </CardContent>
        </Card>
      )}

      {/* Quick Actions */}
      <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
        <Button variant="outline" className="h-20 flex-col" asChild>
          <Link href="/client/requests">
            <Plus className="h-6 w-6 mb-2" />
            طلب خدمة جديدة
          </Link>
        </Button>
        
        <Button variant="outline" className="h-20 flex-col" asChild>
          <Link href="/client/invoices">
            <CreditCard className="h-6 w-6 mb-2" />
            عرض الفواتير
          </Link>
        </Button>
        
        <Button variant="outline" className="h-20 flex-col" asChild>
          <Link href="/client/requests">
            <FileText className="h-6 w-6 mb-2" />
            متابعة الطلبات
          </Link>
        </Button>
        
        <Button variant="outline" className="h-20 flex-col" asChild>
          <Link href="/client/profile">
            <Users className="h-6 w-6 mb-2" />
            الملف الشخصي
          </Link>
        </Button>
      </div>
    </div>
  );
}

  return (
    <div className="space-y-6">
      {/* Header with Greeting */}
      <div className="flex flex-col sm:flex-row justify-between items-start sm:items-center gap-4">
        <div>
          <h1 className="text-3xl font-bold">لوحة التحكم الرئيسية</h1>
          <p className="text-muted-foreground mt-1">
            {getGreeting()}، {user?.name || "عزيزي العميل"} - {currentTime.toLocaleDateString('ar-EG')}
          </p>
        </div>
        <div className="flex gap-2">
          <Button asChild>
            <Link href="/client/requests">
              <Plus className="h-4 w-4 mr-2" />
              طلب خدمة جديدة
            </Link>
          </Button>
        </div>
      </div>

      {/* Quick Stats */}
      <div className="grid grid-cols-2 lg:grid-cols-4 gap-4">
        <Card className="hover:shadow-md transition-shadow">
          <CardContent className="pt-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-muted-foreground">إجمالي الطلبات</p>
                <p className="text-3xl font-bold text-blue-600">{dashboardData.stats.totalRequests}</p>
                <p className="text-xs text-muted-foreground mt-1">+2 هذا الشهر</p>
              </div>
              <div className="p-3 bg-blue-100 rounded-full">
                <FileText className="h-6 w-6 text-blue-600" />
              </div>
            </div>
          </CardContent>
        </Card>

        <Card className="hover:shadow-md transition-shadow">
          <CardContent className="pt-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-muted-foreground">الخدمات النشطة</p>
                <p className="text-3xl font-bold text-green-600">{dashboardData.stats.activeServices}</p>
                <p className="text-xs text-muted-foreground mt-1">جاري التنفيذ</p>
              </div>
              <div className="p-3 bg-green-100 rounded-full">
                <Activity className="h-6 w-6 text-green-600" />
              </div>
            </div>
          </CardContent>
        </Card>

        <Card className="hover:shadow-md transition-shadow">
          <CardContent className="pt-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-muted-foreground">إجمالي الإنفاق</p>
                <p className="text-2xl font-bold text-purple-600">{formatCurrency(dashboardData.stats.totalSpent)}</p>
                <p className="text-xs text-muted-foreground mt-1">هذا العام بالجنيه المصري</p>
              </div>
              <div className="p-3 bg-purple-100 rounded-full">
                <DollarSign className="h-6 w-6 text-purple-600" />
              </div>
            </div>
          </CardContent>
        </Card>

        <Card className="hover:shadow-md transition-shadow">
          <CardContent className="pt-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-muted-foreground">الفواتير المعلقة</p>
                <p className="text-3xl font-bold text-orange-600">{dashboardData.stats.pendingInvoices}</p>
                <p className="text-xs text-muted-foreground mt-1">تحتاج دفع</p>
              </div>
              <div className="p-3 bg-orange-100 rounded-full">
                <CreditCard className="h-6 w-6 text-orange-600" />
              </div>
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Quick Actions */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Zap className="h-5 w-5" />
            إجراءات سريعة
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
            <Button asChild variant="outline" className="h-auto p-4">
              <Link href="/client/requests" className="flex flex-col items-center gap-2">
                <Plus className="h-6 w-6" />
                <span className="text-sm">طلب خدمة</span>
              </Link>
            </Button>
            <Button asChild variant="outline" className="h-auto p-4">
              <Link href="/client/tracking" className="flex flex-col items-center gap-2">
                <Clock className="h-6 w-6" />
                <span className="text-sm">تتبع الطلبات</span>
              </Link>
            </Button>
            <Button asChild variant="outline" className="h-auto p-4">
              <Link href="/client/invoices" className="flex flex-col items-center gap-2">
                <CreditCard className="h-6 w-6" />
                <span className="text-sm">الفواتير</span>
              </Link>
            </Button>
            <Button asChild variant="outline" className="h-auto p-4">
              <Link href="/client/profile" className="flex flex-col items-center gap-2">
                <Users className="h-6 w-6" />
                <span className="text-sm">الملف الشخصي</span>
              </Link>
            </Button>
          </div>
        </CardContent>
      </Card>

      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        {/* Recent Requests */}
        <Card>
          <CardHeader className="flex flex-row items-center justify-between">
            <div>
              <CardTitle>الطلبات الأخيرة</CardTitle>
              <CardDescription>آخر 3 طلبات خدمة</CardDescription>
            </div>
            <Button asChild variant="ghost" size="sm">
              <Link href="/client/tracking" className="flex items-center gap-1">
                عرض الكل
                <ArrowRight className="h-4 w-4" />
              </Link>
            </Button>
          </CardHeader>
          <CardContent className="space-y-4">
            {dashboardData.recentRequests.map((request) => {
              const StatusIcon = statusConfig[request.status as keyof typeof statusConfig].icon;
              return (
                <div key={request.id} className="flex items-center justify-between p-3 border rounded-lg hover:bg-muted/50 transition-colors">
                  <div className="flex-1">
                    <div className="flex items-center gap-2 mb-1">
                      <h4 className="font-medium">{request.title}</h4>
                      <Badge className={statusConfig[request.status as keyof typeof statusConfig].color}>
                        <StatusIcon className="h-3 w-3 mr-1" />
                        {statusConfig[request.status as keyof typeof statusConfig].label}
                      </Badge>
                    </div>
                    <p className="text-sm text-muted-foreground">{request.id} • {request.date}</p>
                  </div>
                  <Button variant="ghost" size="sm">
                    عرض
                  </Button>
                </div>
              );
            })}
          </CardContent>
        </Card>

        {/* Recent Invoices */}
        <Card>
          <CardHeader className="flex flex-row items-center justify-between">
            <div>
              <CardTitle>الفواتير الأخيرة</CardTitle>
              <CardDescription>آخر الفواتير والمدفوعات</CardDescription>
            </div>
            <Button asChild variant="ghost" size="sm">
              <Link href="/client/invoices" className="flex items-center gap-1">
                عرض الكل
                <ArrowRight className="h-4 w-4" />
              </Link>
            </Button>
          </CardHeader>
          <CardContent className="space-y-4">
            {dashboardData.recentInvoices.map((invoice) => (
              <div key={invoice.id} className="flex items-center justify-between p-3 border rounded-lg hover:bg-muted/50 transition-colors">
                <div className="flex-1">
                  <div className="flex items-center gap-2 mb-1">
                    <h4 className="font-medium">{invoice.id}</h4>
                    <Badge className={invoice.status === 'paid' ? 'bg-green-100 text-green-800' : 'bg-yellow-100 text-yellow-800'}>
                      {invoice.status === 'paid' ? 'مدفوعة' : 'قيد الانتظار'}
                    </Badge>
                  </div>
                  <p className="text-sm text-muted-foreground">استحقاق: {invoice.dueDate}</p>
                </div>
                <div className="text-right">
                  <p className="font-bold">{formatCurrency(invoice.amount)}</p>
                  {invoice.status === 'pending' && (
                    <Button variant="outline" size="sm" className="mt-1">
                      دفع الآن
                    </Button>
                  )}
                </div>
              </div>
            ))}
          </CardContent>
        </Card>
      </div>

      {/* Performance Overview */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <BarChart3 className="h-5 w-5" />
            نظرة عامة على الأداء
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
            <div className="space-y-3">
              <div className="flex justify-between text-sm">
                <span>معدل إنجاز الطلبات</span>
                <span className="font-medium">85%</span>
              </div>
              <Progress value={85} className="h-2" />
              <p className="text-xs text-muted-foreground">9 من 12 طلب مكتمل</p>
            </div>
            
            <div className="space-y-3">
              <div className="flex justify-between text-sm">
                <span>الدفع في الوقت المحدد</span>
                <span className="font-medium">92%</span>
              </div>
              <Progress value={92} className="h-2" />
              <p className="text-xs text-muted-foreground">لا توجد متأخرات</p>
            </div>
            
            <div className="space-y-3">
              <div className="flex justify-between text-sm">
                <span>رضا الخدمة</span>
                <span className="font-medium">98%</span>
              </div>
              <Progress value={98} className="h-2" />
              <p className="text-xs text-muted-foreground">تقييم ممتاز</p>
            </div>
          </div>
        </CardContent>
      </Card>

      {/* Notifications */}
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center gap-2">
            <Bell className="h-5 w-5" />
            الإشعارات الأخيرة
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-3">
            {dashboardData.notifications.map((notification) => (
              <div key={notification.id} className="flex items-start gap-3 p-3 border rounded-lg hover:bg-muted/50 transition-colors">
                <div className={`p-2 rounded-full ${notification.type === 'success' ? 'bg-green-100' : 'bg-blue-100'}`}>
                  {notification.type === 'success' ? (
                    <CheckCircle className="h-4 w-4 text-green-600" />
                  ) : (
                    <Bell className="h-4 w-4 text-blue-600" />
                  )}
                </div>
                <div className="flex-1">
                  <p className="text-sm font-medium">{notification.message}</p>
                  <p className="text-xs text-muted-foreground">{notification.time}</p>
                </div>
              </div>
            ))}
          </div>
        </CardContent>
      </Card>

      {/* Security Status */}
      <Card className="border-green-200 bg-green-50/50">
        <CardContent className="pt-6">
          <div className="flex items-center gap-3">
            <div className="p-3 bg-green-100 rounded-full">
              <Shield className="h-6 w-6 text-green-600" />
            </div>
            <div className="flex-1">
              <h3 className="font-semibold text-green-800">حسابك آمن ومحمي</h3>
              <p className="text-sm text-green-700">جميع خدماتك في مصر تعمل بشكل طبيعي. آخر فحص أمني: منذ ساعة واحدة</p>
            </div>
            <Badge className="bg-green-100 text-green-800">نشط</Badge>
          </div>
        </CardContent>
      </Card>
    </div>
  );
}
